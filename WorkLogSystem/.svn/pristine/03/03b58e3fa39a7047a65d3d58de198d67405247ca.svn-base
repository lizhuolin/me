package com.poobo.project.service.impl;

import java.util.List;

import javax.annotation.Resource;

import org.apache.commons.lang3.StringUtils;
import org.hibernate.Criteria;
import org.hibernate.criterion.MatchMode;
import org.hibernate.criterion.Order;
import org.hibernate.criterion.Restrictions;
import org.springframework.stereotype.Service;

import com.poobo.core.entity.TblProject;
import com.poobo.core.enums.EnumDataStatus;
import com.poobo.core.service.impl.BaseServiceImpl;
import com.poobo.core.util.PageController;
import com.poobo.project.dao.IProjectDao;
import com.poobo.project.enums.EnumProjectStatus;
import com.poobo.project.service.IProjectService;

@Service("projectService")
public class ProjectServiceImpl  extends BaseServiceImpl<TblProject> implements IProjectService{
	
	private IProjectDao projectDao;
	@Resource 
	public void setProjectDao(IProjectDao projectDao) {
		super.setBaseDao(projectDao);
		this.projectDao =projectDao;
	}
	public void addProj(TblProject tblProject) {
		tblProject.setDataStatus(EnumDataStatus.NORMAL.getValue());
		//初始化项目未开始
		tblProject.setProjectStatus(EnumProjectStatus.N_START.getValue());
		super.save(tblProject);
		
	}
	@Override
	public  PageController<TblProject> getPageList(TblProject tblProject, int pageNow,
			int pageSize) {
		PageController list=new PageController<TblProject>(30, 10, 2);
		list.setPageNow(pageNow);
		Criteria criteria=projectDao.createCriteria(TblProject.class);
		criteria.add(Restrictions.ne("dataStatus", EnumDataStatus.DEL.getValue()));
		return projectDao.findPageByCriteria(criteria, pageNow, pageSize);
		
	}
	@Override
	public void delProjectByIds(String[] idList) {
		for(String id:idList){
			TblProject tblProject=super.findObjectById(id);
			tblProject.setDataStatus(EnumDataStatus.DEL.getValue());
			//初始化任务未开始
			super.merge(tblProject);
		}
		
	}
	@Override
	public PageController<TblProject> getAllProjectByCompanyId(String companyId,
			int pageNow, int pageSize) {
		Criteria criteria=projectDao.createCriteria(TblProject.class);
		criteria.add(Restrictions.eq("tblCompany.companyId", companyId));
		return projectDao.findPageByCriteria(criteria, pageNow, pageSize);
	}

	
	

	/**
	 * 根据角色条件查询项目列表
	 * @param role
	 * @param pageNow
	 * @param pageSize
	 * @return
	 */
	public PageController<TblProject> findProjectList(TblProject tblProject, int pageNow,
			int pageSize) {
		
		Criteria criteria = projectDao.createCriteria(TblProject.class);
		criteria.add(Restrictions.eq("dataStatus", EnumDataStatus.NORMAL.getValue()));
		criteria.addOrder(Order.desc("projectStartTime"));
		if(null != tblProject){
		  criteria.add(Restrictions.ilike("projectName", tblProject.getProjectName(),MatchMode.ANYWHERE) );
		//  criteria.createCriteria("projectManager").add(Restrictions.ilike("name",tblProject.getProjectManager().getName(),MatchMode.ANYWHERE));
		  if(tblProject.getProjectStatus() != null)
				criteria.add(Restrictions.eq("projectStatus",tblProject.getProjectStatus()));
		}
		return projectDao.findPageByCriteria(criteria, pageNow, pageSize);
	}

}
