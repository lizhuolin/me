package com.poobo.company.action;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.util.ArrayList;
import java.util.List;

import javax.annotation.Resource;

import org.apache.commons.lang.StringUtils;
import org.apache.struts2.ServletActionContext;

import com.poobo.company.service.CompanyService;
import com.poobo.core.action.BaseAction;
import com.poobo.core.entity.TblCompany;
import com.poobo.core.entity.TblRole;
import com.poobo.core.enums.EnumRole;
import com.poobo.core.util.DateUtils;
import com.poobo.core.util.ResultData;
import com.poobo.role.service.IRoleService;
import com.poobo.user.service.IUserService;




public class CompanyAction extends BaseAction<TblCompany> {
	@Resource
	private CompanyService companyService;
	@Resource
	private IUserService userService;
	@Resource
	private IRoleService roleService;
	private List<TblCompany> companyList;
	private TblCompany tblcompany;
	private ResultData resultData;
	private File image;
	private String imageContentType;
	private String imageFileName;
	private String ids;

    private String message = "你已成功上传文件";

	/**
	 * 
	 * 删除公司
	 */
	public String doCompanyDelete()
	{
		resultData=new ResultData();
		if(StringUtils.isNotEmpty(ids))
		{//更新数据状态
			String[]  idList=ids.split("@");
			companyService.delcompanyByIds(idList);
			resultData.setResultFlag(true);
		}
		
		return SUCCESS;
		
	}
	
    /**
     * 
     * 编辑公司信息
     */
	public String edit(){
		resultData = new ResultData();
		if(tblcompany != null && StringUtils.isEmpty(tblcompany.getCompanyId())){
				
				tblcompany.setCharter("1");
				tblcompany.setIsVerification(false);
				tblcompany.setDataStatus(1);
				tblcompany.setCreateTime(DateUtils.getCurrentDateTimeStamp());
				companyService.save(tblcompany);
		}else if(tblcompany != null && !StringUtils.isEmpty(tblcompany.getCompanyId())){
			companyService.update(tblcompany);
		}
		resultData.setResultFlag(true);
		return SUCCESS;
	}

	/**
	 * 
	 * 公司信息审核
	 */
   public String audit(){
		resultData=new ResultData();
		TblRole companyAdminRole = roleService.findObjectById(EnumRole.CADMIN.getValue());
		List<TblCompany> companyList = new ArrayList<TblCompany>();
		if(StringUtils.isNotEmpty(ids))
		{//更新数据状态
			String[]  idList=ids.split("@");
			companyService.auditCompanyByIds(idList);
			//创建公司管理员
			for(String id : idList){
			companyList.add(companyService.findObjectById(id));
			}
			resultData.setResultFlag(true);
		}
		userService.createCompanys(companyList,companyAdminRole);
		return SUCCESS;
    }
	
	public String doRegister(){
		resultData = new ResultData();
		tblcompany.setCharter("1");
		tblcompany.setIsVerification(false);
		tblcompany.setDataStatus(1);
		tblcompany.setCreateTime(DateUtils.getCurrentDateTimeStamp());
		companyService.save(tblcompany);
		resultData.setResultFlag(true);
		return SUCCESS;
	}

	// 跳转到列表页面
	public String companyList(){
//		companyList = companyService.findAll();
		 //pageList = companyService.getPageList(tblcompany, pageNow, pageSize);
		 pageList = companyService.findCompanyList(tblcompany, pageNow, pageSize);
		return "companyList";
	}

	
	// 跳转到保存页面
	public String companyEdit() {
		
		if(tblcompany != null && tblcompany.getCompanyId() != null){
		tblcompany = companyService.findObjectById(tblcompany.getCompanyId());
		}
		return "companyEdit";
	}
	
		public String companyRegiste() {
		return "companyRegiste";
		}

	// 跳转到审核页面
	public String companyAudit(){
		if(tblcompany != null && tblcompany.getCompanyId() != null){
			tblcompany = companyService.findObjectById(tblcompany.getCompanyId());
			}
		return "companyAudit";
	}

	  public String imageUpload() throws Exception {
	        
	        String path = ServletActionContext.getRequest().getRealPath("/upload");

	        try {
	            File f = this.getImage();
	            if(this.getImageFileName().endsWith(".exe")){
	                message="对不起,你上传的文件格式不允许!!!";
	                return ERROR;
	            }
	            FileInputStream inputStream = new FileInputStream(f);
	            FileOutputStream outputStream = new FileOutputStream(path + "/"+ this.getImageFileName());
	            byte[] buf = new byte[1024];
	            int length = 0;
	            while ((length = inputStream.read(buf)) != -1) {
	                outputStream.write(buf, 0, length);
	            }
	            inputStream.close();
	            outputStream.flush();
	        } catch (Exception e) {
	            e.printStackTrace();
	            message = "对不起,文件上传失败了!!!!";
	        }
	        return SUCCESS;
	    }
	
	public List<TblCompany> getCompanyList() {
		return companyList;
	}

	public void setCompanyList(List<TblCompany> companyList) {
		this.companyList = companyList;
	}

	




	public TblCompany getTblcompany() {
		return tblcompany;
	}

	public void setTblcompany(TblCompany tblcompany) {
		this.tblcompany = tblcompany;
	}

	public ResultData getResultData() {
		return resultData;
	}





	public File getImage() {
		return image;
	}

	public void setImage(File image) {
		this.image = image;
	}

	public String getImageContentType() {
		return imageContentType;
	}

	public void setImageContentType(String imageContentType) {
		this.imageContentType = imageContentType;
	}

	public String getImageFileName() {
		return imageFileName;
	}

	public void setImageFileName(String imageFileName) {
		this.imageFileName = imageFileName;
	}

	public String getMessage() {
		return message;
	}

	public void setMessage(String message) {
		this.message = message;
	}

	public void setResultData(ResultData resultData) {
		this.resultData = resultData;
	}

	public String getIds() {
		return ids;
	}

	public void setIds(String ids) {
		this.ids = ids;
	}



		
	
}
