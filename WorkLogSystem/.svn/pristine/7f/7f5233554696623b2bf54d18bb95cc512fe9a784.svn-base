package com.poobo.task.action;

import java.sql.Timestamp;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import javax.annotation.Resource;

import org.apache.commons.lang3.StringUtils;
import org.apache.struts2.ServletActionContext;

import com.poobo.company.service.CompanyService;
import com.poobo.core.action.BaseAction;
import com.poobo.core.entity.TblCompany;
import com.poobo.core.entity.TblTask;
import com.poobo.core.entity.TblUser;
import com.poobo.core.entity.TblUserTask;
import com.poobo.core.enums.EnumDataStatus;
import com.poobo.core.util.GetSessionUser;
import com.poobo.core.util.ResultData;
import com.poobo.task.service.ITaskService;
import com.poobo.user.service.IUserService;

/**
 * 任务控制类
 * @author zhiliang.lan 2016年3月9日上午10:51:29
 *
 */
public class TaskAction  extends BaseAction {
	
	
	@Resource
	private ITaskService taskService;
	@Resource
	private CompanyService companyService;
	@Resource
	private IUserService userService;
	
	private ResultData resultData;
	private TblTask tblTask;
	private List<TblUser> userList;
	private String ids;
	private String taskCreater;
	private List<TblTask> taskList;
	private List<TblTask> task_detailList;
	
	public String taskList(){
		//pageList = taskService.getPageList(tblTask, pageNow, pageSize);
		pageList = taskService.findTaskList(tblTask, pageNow, pageSize);
		
		String companyId = GetSessionUser.getUser().getTblCompany().getCompanyId();
		taskList = taskService.findTaskByCompanyId(companyId);
		userList = new ArrayList<TblUser>();
		for(TblTask task : taskList){
			userList.add(task.getTaskResponsible());
		}
		return "taskList";
	}
	

	public String task_detailList(){
		//pageList = taskService.getPageList(tblTask, pageNow, pageSize);
		pageList = taskService.findTaskList(tblTask, pageNow, pageSize);
		task_detailList = taskService.findAll();
		return "task_detailList";
	}
	
	/*public String task_detail(){
		pageList = taskService.findTaskList(tblTask, pageNow, pageSize);
		tblTask = ;
		return "task_detail";
	}*/
	
	/**
	 * 去任务编辑页面
	 * @return
	 */
	public String taskEdit(){
		if(null!=tblTask&&StringUtils.isNotEmpty(tblTask.getTaskId())){
			//编辑
			tblTask=taskService.findObjectById(tblTask.getTaskId());
			
		}
		//TODO 获取公司人员列表
		//userList
		userList = userService.getUserListByCompanyId(GetSessionUser.getUser().getTblCompany().getCompanyId());
		return "taskEdit";
	}
	
	/**
	 * 执行任务编辑
	 * @return
	 */
	public String doTaskEdit(){
		resultData=new ResultData();
		
		
		if(StringUtils.isEmpty(tblTask.getTaskId())){
			//新增
			//TODO 公司id
			TblUser user =  (TblUser) GetSessionUser.getUser();
			TblCompany company = new TblCompany();
			company.setCompanyId(user.getTblCompany().getCompanyId());
			tblTask.setTblCompany(company);
			
			user.setUserId(user.getUserId());
			
			tblTask.setCreaterUser(user);
			tblTask.setDataStatus(EnumDataStatus.NORMAL.getValue());
			//获取当前时间并保存
			Date date = new Date();       
			Timestamp time = new Timestamp(date.getTime());
			tblTask.setCreateTime(time);
			taskService.newTask(tblTask);
			
		}else{
			//编辑
			taskService.updateTask(tblTask);
		}
		
		resultData.setResultFlag(true);
		return SUCCESS;
	}
	
	/**
	 * 删除任务
	 * @return
	 */
	public String doTaskDelete()
	{
		resultData=new ResultData();
		if(StringUtils.isNotEmpty(ids))
		{//更新数据状态
			String[]  idList=ids.split("@");
			taskService.delTaskByIds(idList);
			resultData.setResultFlag(true);
		}
		
		return SUCCESS;
		
	}
	
	
	//通过用户id查询任务
	public String searchTaskByUserId(String userId){
		taskService.findTaskByUserId(userId);
		return "";
	}
	
	
	public ResultData getResultData() {
		return resultData;
	}

	public void setResultData(ResultData resultData) {
		this.resultData = resultData;
	}

	public TblTask getTblTask() {
		//EnumDataStatus.NORMAL.getValue();
		return tblTask;
	}

	public void setTblTask(TblTask tblTask) {
		this.tblTask = tblTask;
	}

	public List<TblUser> getUserList() {
		return userList;
	}

	public void setUserList(List<TblUser> userList) {
		this.userList = userList;
	}

	public String getIds() {
		return ids;
	}

	public void setIds(String ids) {
		this.ids = ids;
	}



	public List<TblTask> getTaskList() {
		return taskList;
	}



	public void setTaskList(List<TblTask> taskList) {
		this.taskList = taskList;
	}



	public List<TblTask> getTask_detailList() {
		return task_detailList;
	}



	public void setTask_detailList(List<TblTask> task_detailList) {
		this.task_detailList = task_detailList;
	}
	
	
	

	
	
	
}
