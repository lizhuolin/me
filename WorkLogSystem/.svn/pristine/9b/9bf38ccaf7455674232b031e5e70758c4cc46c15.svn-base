package com.poobo.plan.service.impl;

import java.util.List;

import javax.annotation.Resource;
import javax.servlet.ServletOutputStream;

import org.hibernate.Criteria;
import org.hibernate.criterion.Restrictions;
import org.springframework.stereotype.Service;

import com.poobo.core.entity.TblPlan;
import com.poobo.core.enums.EnumDataStatus;
import com.poobo.core.service.impl.BaseServiceImpl;
import com.poobo.core.util.ExcelUtil;
import com.poobo.core.util.PageController;
import com.poobo.plan.dao.IPlanDao;
import com.poobo.plan.service.IPlanService;


@Service("planService")
public class PlanServiceImpl extends BaseServiceImpl<TblPlan> implements IPlanService{
	private IPlanDao planDao;
	
	@Resource
	public void setPlanDao(IPlanDao planDao) {
		super.setBaseDao(planDao);
		this.planDao = planDao;
	}

	@Override
	public PageController<TblPlan> getPageList(TblPlan tblPlan, int pageNow,
			int pageSize) {
		
		return null;
	}

	@Override
	public PageController getPlanListByProjectId(String projectId, int pageNow,
			int pageSize) {
		PageController list=new PageController<TblPlan>(30, 10, 2);
		list.setPageNow(pageNow);
		Criteria criteria=planDao.createCriteria(TblPlan.class);
		criteria.add(Restrictions.eq("tblProject.projectId",projectId ));
		criteria.add(Restrictions.eq("dataStatus",EnumDataStatus.NORMAL.getValue() ));
		return planDao.findPageByCriteria(criteria, pageNow, pageSize);
	}

	@Override
	public void delPlanByIds(String[] idList) {
		for(String id:idList){
			TblPlan tblPlan=super.findObjectById(id);
			tblPlan.setDataStatus(EnumDataStatus.DEL.getValue());
			
			super.merge(tblPlan);
		}
	}

	@Override
	public List<TblPlan> findAllbyProjectid(String projectId) {
		
		return planDao.findAllByProjectId(projectId);
	}

	@Override
	public void exportExcel(List<TblPlan> findAllbyProjectid,
			ServletOutputStream outputStream) {
		ExcelUtil.exportPlanExcel(findAllbyProjectid, outputStream);
		
	}

}
