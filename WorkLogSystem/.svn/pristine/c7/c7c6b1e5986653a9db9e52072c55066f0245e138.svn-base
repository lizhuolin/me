package com.poobo.core.util;

import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;

import javax.servlet.ServletOutputStream;

import org.apache.poi.hssf.usermodel.HSSFCell;
import org.apache.poi.hssf.usermodel.HSSFCellStyle;
import org.apache.poi.hssf.usermodel.HSSFDataFormat;
import org.apache.poi.hssf.usermodel.HSSFFont;
import org.apache.poi.hssf.usermodel.HSSFRow;
import org.apache.poi.hssf.usermodel.HSSFSheet;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.ss.util.CellRangeAddress;

import com.poobo.core.entity.TblPlan;
import com.poobo.core.entity.TblTimereport;
import com.poobo.plan.enums.EnumPlanClass;
import com.poobo.plan.enums.EnumPlanStatus;

public class ExcelUtil {

	/**
	 * 导出用户的所有列表到excel
	 * @param timeReport 定时报告列表
	 * @param outputStream 输出流
	 */
	public static void exportUserExcel(List<TblTimereport> timeReports, ServletOutputStream outputStream) {
		try {
			//1、创建工作簿
			HSSFWorkbook workbook = new HSSFWorkbook();
			//1.1、创建合并单元格对象
			CellRangeAddress cellRangeAddress = new CellRangeAddress(0, 0, 0, 8);//起始行号，结束行号，起始列号，结束列号
			
			//1.2、头标题样式
			HSSFCellStyle style1 = createCellStyle(workbook, (short)16);
			
			//1.3、列标题样式
			HSSFCellStyle style2 = createCellStyle(workbook, (short)13);
			
			//2、创建工作表
			HSSFSheet sheet = workbook.createSheet("定时报告");
			//2.1、加载合并单元格对象
			sheet.addMergedRegion(cellRangeAddress);
			//设置默认列宽
			sheet.setDefaultColumnWidth(25);
			
			//3、创建行
			//3.1、创建头标题行；并且设置头标题
			HSSFRow row1 = sheet.createRow(0);
			HSSFCell cell1 = row1.createCell(0);
			//加载单元格样式
			cell1.setCellStyle(style1);
			cell1.setCellValue("定时报告");
			
			//3.2、创建列标题行；并且设置列标题
			HSSFRow row2 = sheet.createRow(1);
			String[] titles = {"项目名称","项目负责人", "项目预计开始时间", "项目预计结束时间","项目实际开始时间", "项目实际结束时间","项目目标","项目已完成进度","项目状态","项目备注"};
			for(int i = 0; i < titles.length; i++){
				HSSFCell cell2 = row2.createCell(i);
				//加载单元格样式
				cell2.setCellStyle(style2);
				cell2.setCellValue(titles[i]);
			}
			SimpleDateFormat sdf=new SimpleDateFormat("yyyy-MM-dd");
			//4、操作单元格；将用户列表写入excel
			HSSFCellStyle style = workbook.createCellStyle();
			style.setAlignment(HSSFCellStyle.ALIGN_CENTER);//水平居中
			style.setVerticalAlignment(HSSFCellStyle.VERTICAL_CENTER);//垂直居中
			
			HSSFCellStyle styleDate = workbook.createCellStyle();
			styleDate.setAlignment(HSSFCellStyle.ALIGN_CENTER);//水平居中
			styleDate.setVerticalAlignment(HSSFCellStyle.VERTICAL_CENTER);//垂直居中
			styleDate.setDataFormat(HSSFDataFormat.getBuiltinFormat("m/d/yy"));
			
			if(timeReports != null){
				for(int j = 0; j < timeReports.size(); j++){
					HSSFRow row = sheet.createRow(j+2);
					HSSFCell cell11 = row.createCell(0);
					cell11.setCellValue(timeReports.get(j).getProjectName());
					cell11.setCellStyle(style);
					
					HSSFCell cell12 = row.createCell(1);
					cell12.setCellValue(timeReports.get(j).getProjectManager());
					cell12.setCellStyle(style);
					
					
					HSSFCell cell13 = row.createCell(2);
					cell13.setCellValue(timeReports.get(j).getProjectStartTime());
					cell13.setCellStyle(styleDate);
					
					HSSFCell cell14 = row.createCell(3);
					cell14.setCellValue(timeReports.get(j).getProjectEndTime());
					cell14.setCellStyle(styleDate);
					
					HSSFCell cell15 = row.createCell(4);
					if(timeReports.get(j).getProjectRealStartTime() !=null){
					 cell15.setCellValue(timeReports.get(j).getProjectRealStartTime());
					}else{
						cell15.setCellValue("");
					}
					cell15.setCellStyle(styleDate);
					
					HSSFCell cell16 = row.createCell(5);
					if(timeReports.get(j).getProjectRealStartTime() !=null){
					cell16.setCellValue(timeReports.get(j).getProjectRealEndTime());
					}else{
						cell16.setCellValue("");
					}
					cell16.setCellStyle(styleDate);
		
					HSSFCell cell17 = row.createCell(6);
					cell17.setCellValue(timeReports.get(j).getProjectTarget());
					cell17.setCellStyle(style);
					
					HSSFCell cell18 = row.createCell(7);
					cell18.setCellValue(timeReports.get(j).getProjectProgress());
					cell18.setCellStyle(style);
					
					HSSFCell cell19 = row.createCell(8);
					cell19.setCellValue(timeReports.get(j).getProjectStatus());
					cell18.setCellStyle(style);
					
					HSSFCell cell20 = row.createCell(9);
					cell20.setCellValue(timeReports.get(j).getProjectRemaks());
					cell20.setCellStyle(style);

				}
			}
			//5、输出
			workbook.write(outputStream);
			workbook.close();
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	/**导出项目计划excel表格
	 * @author lizhuolin
	 */
	public static void exportPlanExcel(List<TblPlan> planList,ServletOutputStream outputStream){
		try {
			//1、创建工作簿
			HSSFWorkbook workbook = new HSSFWorkbook();
			//1.1、创建合并单元格对象
			CellRangeAddress cellRangeAddress = new CellRangeAddress(0, 0, 0, 8);//起始行号，结束行号，起始列号，结束列号
			
			//1.2、头标题样式
			HSSFCellStyle style1 = createCellStyle(workbook, (short)16);
			
			//1.3、列标题样式
			HSSFCellStyle style2 = createCellStyle(workbook, (short)13);
			
			//2、创建工作表
			HSSFSheet sheet = workbook.createSheet("项目计划");
			//2.1、加载合并单元格对象
			sheet.addMergedRegion(cellRangeAddress);
			//设置默认列宽
			sheet.setDefaultColumnWidth(25);
			
			//3、创建行
			//3.1、创建头标题行；并且设置头标题
			HSSFRow row1 = sheet.createRow(0);
			HSSFCell cell1 = row1.createCell(0);
			//加载单元格样式
			cell1.setCellStyle(style1);
			cell1.setCellValue("项目计划");
			
			//3.2、创建列标题行；并且设置列标题
			HSSFRow row2 = sheet.createRow(1);
			String[] titles = {"计划名称","计划负责人","计划预计开始时间", "计划预计结束时间", "计划实际开始时间","计划实际结束时间","计划目标","计划进度","计划状态", "计划内容","计划等级","计划备注"};
			for(int i = 0; i < titles.length; i++){
				HSSFCell cell2 = row2.createCell(i);
				//加载单元格样式
				cell2.setCellStyle(style2);
				cell2.setCellValue(titles[i]);
			}
			SimpleDateFormat sdf=new SimpleDateFormat("yyyy-MM-dd");
			//4、操作单元格；将用户列表写入excel
			HSSFCellStyle style = workbook.createCellStyle();
			style.setAlignment(HSSFCellStyle.ALIGN_CENTER);//水平居中
			style.setVerticalAlignment(HSSFCellStyle.VERTICAL_CENTER);//垂直居中
			
			HSSFCellStyle styleDate = workbook.createCellStyle();
			styleDate.setAlignment(HSSFCellStyle.ALIGN_CENTER);//水平居中
			styleDate.setVerticalAlignment(HSSFCellStyle.VERTICAL_CENTER);//垂直居中
			styleDate.setDataFormat(HSSFDataFormat.getBuiltinFormat("m/d/yy"));
			
			if(planList != null){
				for(int j = 0; j < planList.size(); j++){
					HSSFRow row = sheet.createRow(j+2);
					HSSFCell cell11 = row.createCell(0);
					cell11.setCellValue(planList.get(j).getPlanName());
					cell11.setCellStyle(style);
					
					HSSFCell cell12 = row.createCell(1);
					cell12.setCellValue(planList.get(j).getPlanManager().getName());
					cell12.setCellStyle(style);
					
					
					HSSFCell cell13 = row.createCell(2);
					cell13.setCellValue(planList.get(j).getPlanStartTime());
					cell13.setCellStyle(styleDate);
					
					HSSFCell cell14 = row.createCell(3);
					cell14.setCellValue(planList.get(j).getPlanEndTime());
					cell14.setCellStyle(styleDate);
					
					HSSFCell cell15 = row.createCell(4);
					cell15.setCellValue(planList.get(j).getPlanRealStartTime());
					cell15.setCellStyle(styleDate);
					
					HSSFCell cell16 = row.createCell(5);
					cell16.setCellValue(planList.get(j).getPlanRealEndTime());
					cell16.setCellStyle(styleDate);
					
					HSSFCell cell17 = row.createCell(6);
					cell17.setCellValue(planList.get(j).getPlanTarget());
					cell17.setCellStyle(style);
					
					HSSFCell cell18 = row.createCell(7);
					cell18.setCellValue(planList.get(j).getProjectProgress());
					cell18.setCellStyle(style);
					
					HSSFCell cell19 = row.createCell(8);
					if(planList.get(j).getPlanStatus()==EnumPlanStatus.N_START.getValue()){
						cell19.setCellValue(EnumPlanStatus.N_START.getDesc());
					}else if(planList.get(j).getPlanStatus()==EnumPlanStatus.ING.getValue()){
						cell19.setCellValue(EnumPlanStatus.ING.getDesc());
					}else{
						cell19.setCellValue(EnumPlanStatus.OVER.getDesc());
					}
					cell19.setCellStyle(style);
					
					HSSFCell cell20 = row.createCell(9);
					cell20.setCellValue(planList.get(j).getPlanMsg());
					cell20.setCellStyle(style);
					
					HSSFCell cell21 =row.createCell(10);
					if(planList.get(j).getPlanClass()==EnumPlanClass.LOW.getValue()){
						cell21.setCellValue(EnumPlanClass.LOW.getDesc());
					}else if(planList.get(j).getPlanClass()==EnumPlanClass.NOR.getValue()){
						cell21.setCellValue(EnumPlanClass.NOR.getDesc());
					}else{
						cell21.setCellValue(EnumPlanClass.HIG.getDesc());
					}
					cell21.setCellStyle(style);
					
					HSSFCell cell22 = row.createCell(11);
					cell22.setCellValue(planList.get(j).getPlanRemarks());
					cell22.setCellStyle(style);
				}
			}
			//5、输出
			workbook.write(outputStream);
			workbook.close();
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	/**
	 * 创建单元格样式
	 * @param workbook 工作簿
	 * @param fontSize 字体大小
	 * @return 单元格样式
	 */
	private static HSSFCellStyle createCellStyle(HSSFWorkbook workbook, short fontSize) {
		HSSFCellStyle style = workbook.createCellStyle();
		style.setAlignment(HSSFCellStyle.ALIGN_CENTER);//水平居中
		style.setVerticalAlignment(HSSFCellStyle.VERTICAL_CENTER);//垂直居中
		//创建字体
		HSSFFont font = workbook.createFont();
		font.setBoldweight(HSSFFont.BOLDWEIGHT_BOLD);//加粗字体
		font.setFontHeightInPoints(fontSize);
		//加载字体
		style.setFont(font);
		return style;
	}

}
